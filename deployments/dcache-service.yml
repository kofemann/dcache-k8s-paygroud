#
# dCache in kubernetes
#


#
# dCache exposed ports
#
apiVersion: v1
kind: Service
metadata:
  name: dcache-door-svc
  labels:
    app: dcache-door
spec:
  selector:
    app: dcache-door
  ports:
    # doors
    - name: nfs-door
      port: 2049
      targetPort: 2049
    - name: xroot-door
      port: 1094
      targetPort: 1094
    - name: webdav-door
      port: 8080
      targetPort: 8080
    - name: cell-tunnel
      port: 11111
      targetPort: 11111
---

apiVersion: v1
kind: Service
metadata:
  name: dcache-pool-svc
  labels:
    app: dcache-pool
spec:
  selector:
    app: dcache-pool
  ports:
    # movers
    - name: nfs-mover
      port: 32049
      targetPort: 32049
    - name: xroot-mover
      port: 31094
      targetPort: 31094
    - name: http-mover
      port: 38080
      targetPort: 38080
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: dcache-k8s-config
data:
  dcache-k8s-door: |-
    dcache.broker.scheme = core
    dcache.zookeeper.connection=zk-cs:2181

    dcache.enable.space-reservation = false
    cleaner.destination.remove-notification = 

    chimera.db.user=postgres
    chimera.db.password=let-me-in
    chimera.db.host=postgresql-service
    chimera.db.name=chimera

    chimerashell.db.host = ${chimera.db.host}
    chimerashell.db.user = ${chimera.db.user}
    chimerashell.db.password = ${chimera.db.password}
    chimerashell.db.name = ${chimera.db.name}

    [core]
    [core/poolmanager]

    [core/pnfsmanager]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${pnfsmanager.cell.name}

    [core/cleaner]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${cleaner.cell.name}

    [core/nfs]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${nfs.cell.name}
    nfs.version=4.1
    nfs.domain=dcache.org
    nfs.enable.portmap=false
    nfs.namespace-cache.size=8192
    nfs.export.file=${dcache.home}/etc/exports

    [core/gplazma]

    [core/xrootd]
    xrootd.security.tls.mode=OFF
    xrootd.authz.write-paths = /
    xrootd.authz.anonymous-operations = FULL

    [core/httpd]

    [core/webdav]
    webdav.net.port=8080
    webdav.authz.anonymous-operations=FULL
    webdav.redirect.on-write=false
    webdav.redirect.on-read=true

    [core/frontend]
    frontend.authn.protocol=http
    frontend.authz.anonymous-operations=FULL

  dcache-k8s-pool: |-
    dcache.broker.scheme = satellite
    dcache.zookeeper.connection=zk-cs:2181

    pool.tags=hostname=${host.name}
    pool.mover.xrootd.security.tls.mode=OFF

    [pool]

    [pool/pool]
    pool.name=pool-A
    pool.path=/pool
    pool.mover.nfs.port.min=32049
    pool.mover.nfs.port.max=32049
    pool.mover.xrootd.port.min=31094
    pool.mover.xrootd.port.max=31094
    pool.mover.http.port.min=38080
    pool.mover.http.port.max=38080

  dcache.conf: |-
    dcache.layout=dcache-k8s

  00-init.sh: |-
    /opt/dcache/bin/dcache database update
    /opt/dcache/bin/chimera mkdir /testbase
    /opt/dcache/bin/chimera chmod 0777 /testbase
---

#
# dCache containers
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dcache-pool
spec:
  selector:
    matchLabels:
      app: dcache-pool
  replicas: 1
  serviceName: dcache-pool-service
  template:
    metadata:
      labels:
        app: dcache-pool
    spec:
      containers:
      - name: dcache-pool
        image: dcache/dcache:8.1.0a
        command: ["/run.sh", "pool"]
        env:
          - name: JAVA_ARGS
            value: -Dorg.dcache.net.localaddresses=dcache-pool-svc
        readinessProbe:
          tcpSocket:
            port: 32049
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 32049
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: dcache-config
          mountPath: /opt/dcache/etc/dcache.conf
          subPath: dcache.conf
          readOnly: true
        - name: dcache-layout
          mountPath: /opt/dcache/etc/layouts/dcache-k8s.conf
          subPath: dcache-k8s.conf
          readOnly: true
      volumes:
      - name: dcache-config
        configMap:
          name: dcache-k8s-config
          items:
          - key: "dcache.conf"
            path: "dcache.conf"
      - name: dcache-layout
        configMap:
          name: dcache-k8s-config
          items:
          - key: "dcache-k8s-pool"
            path: "dcache-k8s.conf"
---

#
# dCache containers
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dcache-door
spec:
  selector:
    matchLabels:
      app: dcache-door
  replicas: 1
  serviceName: dcache-door-service
  template:
    metadata:
      labels:
        app: dcache-door
    spec:
      containers:
      - name: dcache-door
        image: dcache/dcache:8.1.0a
        command: ["/run.sh", "core"]
        env:
          - name: JAVA_ARGS
            value: -Dorg.dcache.net.localaddresses=dcache-door-svc
        readinessProbe:
          tcpSocket:
            port: 2049
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 2049
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: dcache-config
          mountPath: /opt/dcache/etc/dcache.conf
          subPath: dcache.conf
          readOnly: true
        - name: dcache-layout
          mountPath: /opt/dcache/etc/layouts/dcache-k8s.conf
          subPath: dcache-k8s.conf
          readOnly: true
        - name: init-scripts
          mountPath: /dcache.init.d/00-init.sh
          subPath: 00-init.sh
          readOnly: true
      volumes:
      - name: dcache-config
        configMap:
          name: dcache-k8s-config
          items:
          - key: "dcache.conf"
            path: "dcache.conf"
      - name: dcache-layout
        configMap:
          name: dcache-k8s-config
          items:
          - key: "dcache-k8s-door"
            path: "dcache-k8s.conf"
      - name: init-scripts
        configMap:
          name: dcache-k8s-config
          items:
          - key: "00-init.sh"
            path: "00-init.sh"

